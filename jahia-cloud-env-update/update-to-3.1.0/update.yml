---
type: update
version: 1.5.2
name: Update v3.1.0
logo: /images/jahia-logo-70x70.png
id: update-v3.1.0

globals:
  healthcheck_token: ${fn.password(20)}
  version_flag: "UPDATE_3_1_0"

onInstall:
  - script: |
      const envVars = jelastic.env.control.GetContainerEnvVarsByGroup(
          "${env.envName}",
          session,
          "cp"
      );
      if ("${globals.version_flag}" in envVars.object) {
          return {'result': 1, 'error': 'Update package already applied'}
      } else {
          return {'result': 0}
      }
  - if (nodes.proc):  # Jahia
      - updateJahiaEvents
      - jelasticPackageLogsJahia # PAAS-1237
      - removeOldserverId        # COPS-148
      - healthcheckToken         # PAAS-1271
      - jahiaRollingRestart      # PAAS-1271 + COPS-148
      - cleanRevisionTable        # COPS-148
      - updateHaproxyConfigForToken # PAAS-1257
  - else:  # Unomi
      - updateUnomiEvents
      - jelasticPackageLogsUnomi # PAAS-1237
      - redeployEsNodes # PAAS-1095
  - api[cp]: env.control.AddContainerEnvVars
    vars: {"${globals.version_flag}": true}

actions:
  updateJahiaEvents:
    install:
      jps: "https://raw.githubusercontent.com/Jahia/paas_jelastic_dx_universal/v1.15/update.yml"

  updateUnomiEvents:
    install:
      jps: "https://raw.githubusercontent.com/Jahia/paas_jelastic_unomi/v1.13/update.yml"

  jelasticPackageLogsJahia:
    - jelasticPackageLogsPermissions:
        target: "proc,cp"
        user: tomcat
    - jelasticPackageLogsPermissions:
        target: sqldb
        user: mysql
    - jelasticPackageLogsPermissions:
        target: bl
        user: haproxy

  jelasticPackageLogsUnomi:
    jelasticPackageLogsPermissions:
      target: "es,cp"
      user: root

  jelasticPackageLogsPermissions:
    - cmd[${this.target}]: |-
        mkdir -p /etc/datadog-agent/conf.d/jelastic.d /var/log/jelastic-packages
        chown ${this.user}:root /var/log/jelastic-packages
        chown dd-agent: /etc/datadog-agent/conf.d/jelastic.d
        wget -qO /etc/datadog-agent/conf.d/jelastic.d/conf.yaml ${baseUrl}/dd_agent_jelastic_package_conf.yml
        systemctl restart datadog-agent
      user: root

  removeOldserverId:
    - cmd [proc, cp]: |-
        short_name=$(echo ${_ROLE}.$HOSTNAME | sed -r 's/^([a-Z]+)\.[a-Z]+([0-9]+)-.+$/\1.\2/' | tr 'A-Z' 'a-z')
        sed -i "s|^cluster.node.serverId.*|cluster.node.serverId = $short_name|" $STACK_PATH/conf/digital-factory-config/jahia/jahia.node.properties
      user: root
    - cmd [proc]:
        - awk '$1=="cluster.node.serverId" {print $NF; exit}' /opt/tomcat/conf/digital-factory-config/jahia/jahia.node.properties
    - writeFile:
        nodegroup: proc
        path: /tmp/nodesList
        body: ${response.out}
    - forEach(nodes.cp):
        - cmd [${@i.id}]:
            - awk '$1=="cluster.node.serverId" {print $NF; exit}' /opt/tomcat/conf/digital-factory-config/jahia/jahia.node.properties
        - appendFile:
            nodegroup: proc
            path: /tmp/nodesList
            body: ${response.out}

  healthcheckToken:
    - api [cp,proc,bl]: env.control.AddContainerEnvVars
      vars: {"jahia_cfg_healthcheck_token": "${globals.healthcheck_token}"}

  jahiaRollingRestart:
    install:
      jps: "https://raw.githubusercontent.com/Jahia/paas_jelastic_dx_universal/v1.15/jahia/jahia-rolling-restart.yml"

  cleanRevisionTable:
    - cmd [proc]: |-
        sql_cmd="mysql -E -u $DB_USER -p$DB_PASSWORD -h galera -D jahia"
        query="DELETE from JR_J_LOCAL_REVISIONS where "
        cond=$(while read line; do echo -n "JOURNAL_ID!=\"$line\" AND "; done < /tmp/nodesList | sed 's/\s*AND\s*$//')
        echo $sql_cmd -e \'$query $cond\' > /tmp/nodesList.sh
        bash /tmp/nodesList.sh
        rm -f /tmp/nodesList*

  updateHaproxyConfigForToken:
    cmd[bl]: |-
      yum install -y jq
      cd /etc/haproxy/haproxy.cfg.d
      if [ "$(grep external-check 10-jahia.cfg)" = "" ]; then
        wget -qO healthcheck.sh ${baseUrl}/haproxy-backend-healthcheck.sh
        chown haproxy: healthcheck.sh
        chmod u+x healthcheck.sh
        sed -i 's/httpchk.*/external-check/' 10-jahia.cfg
        sed -i '5 a\    external-check command /etc/haproxy/haproxy.cfg.d/healthcheck.sh' 10-jahia.cfg
        sed -i '5 a\    external-check path "/usr/bin:/bin"' 10-jahia.cfg
        sed -i 's/httpchk.*/external-check/' 11-proc.cfg
        sed -i '4 a\    external-check command /etc/haproxy/haproxy.cfg.d/healthcheck.sh' 11-proc.cfg
        sed -i '4 a\    external-check path "/usr/bin:/bin"' 11-proc.cfg
        sed -i '8 a\    external-check' 00-global.cfg
        service haproxy reload
      fi
    user: root

  redeployEsNodes:
    install:
      jps: "https://raw.githubusercontent.com/Jahia/cloud-scripts/master/es-nodes/redeploy-es-nodes.yml"
